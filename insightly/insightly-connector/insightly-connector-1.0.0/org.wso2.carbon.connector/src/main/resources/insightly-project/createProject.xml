<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- Method Documentation URL: https://api.insight.ly/v2.1/Help/Api/POST-Projects -->
<template name="createProject" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="projectDetails" description="Details of the Project. Maximum length is 4000 characters." />
   <parameter name="opportunityId"
      description="Unique key of the Opportunity from which the Project may have been converted. Must be a valid Opportunity ID, otherwise will generate a 400 error." />
   <parameter name="startedDate" description="Date Project started, in YYYY-MM-DD format." />
   <parameter name="completedDate" description="Date Project completed, in YYYY-MM-DD format." />
   <parameter name="imageUrl" description="Url of the Image for the Project." />
   <parameter name="responsibleUserId"
      description="ID of the User responsible for the Project. Must be a valid user ID, otherwise will generate a 400 error." />
   <parameter name="ownerUserId"
      description="User ID of the Project record owner. Must be a valid user ID, otherwise will generate a 400 error." />
   <parameter name="categoryId"
      description="The Category ID of the Project, if it has been assigned to one. Must be a valid CATEGORY_ID, otherwise will generate a 400 error." />
   <parameter name="pipelineId" description="The Pipeline ID that the Project is in, if it has been assigned to one." />
   <parameter name="stageId" description="The Stage ID of the Stage that the Project is in, if it has been assigned to one." />
   <parameter name="visibleTo"
      description="This field can have one of the following values: 'Everyone' (Default), 'Owner', 'Team', or 'Individuals'." />
   <parameter name="visibleTeamId" description="If VISIBLE_TO is 'Team', then this should be a Team ID." />
   <parameter name="visibleUserIds" description="If VISIBLE_TO is 'Individuals', then this should be a comma-separated list of User IDs." />
   <parameter name="projectName" description="Name of the Project (required). Maximum length is 255 characters." />
   <parameter name="status"
      description="This field must have one of the following values: 'Abandoned', 'Cancelled', 'Completed', 'Deferred', 'In Progress', 'Not Started'." />
   <parameter name="tags" description="Set of Tags attached to the Project." />
   <parameter name="links" description="Set of Links attached to the Project." />
   <parameter name="emailLinks" description="Set of Email Links attached to the Project." />
   <parameter name="customFields" description="Set of Custom Fields attached to the Project." />
   <sequence>
      <property name="uri.var.projectDetails" expression="$func:projectDetails" />
      <property name="uri.var.opportunityId" expression="$func:opportunityId" />
      <property name="uri.var.startedDate" expression="$func:startedDate" />
      <property name="uri.var.completedDate" expression="$func:completedDate" />
      <property name="uri.var.imageUrl" expression="$func:imageUrl" />
      <property name="uri.var.responsibleUserId" expression="$func:responsibleUserId" />
      <property name="uri.var.ownerUserId" expression="$func:ownerUserId" />
      <property name="uri.var.categoryId" expression="$func:categoryId" />
      <property name="uri.var.pipelineId" expression="$func:pipelineId" />
      <property name="uri.var.stageId" expression="$func:stageId" />
      <property name="uri.var.visibleTo" expression="$func:visibleTo" />
      <property name="uri.var.visibleTeamId" expression="$func:visibleTeamId" />
      <property name="uri.var.visibleUserIds" expression="$func:visibleUserIds" />
      <property name="uri.var.projectName" expression="$func:projectName" />
      <property name="uri.var.status" expression="$func:status" />
      <property name="uri.var.tags" expression="$func:tags" />
      <property name="uri.var.links" expression="$func:links" />
      <property name="uri.var.emailLinks" expression="$func:emailLinks" />
      <property name="uri.var.customFields" expression="$func:customFields" />
      <!-- If user sends null for these parameters then set empty string -->
      <filter xpath="get-property('uri.var.projectDetails') = 'null'">
         <then>
            <property name="uri.var.projectDetails" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.opportunityId') = 'null'">
         <then>
            <property name="uri.var.opportunityId" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.startedDate') = 'null'">
         <then>
            <property name="uri.var.startedDate" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.completedDate') = 'null'">
         <then>
            <property name="uri.var.completedDate" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.imageUrl') = 'null'">
         <then>
            <property name="uri.var.imageUrl" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.responsibleUserId') = 'null'">
         <then>
            <property name="uri.var.responsibleUserId" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.categoryId') = 'null'">
         <then>
            <property name="uri.var.categoryId" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.pipelineId') = 'null'">
         <then>
            <property name="uri.var.pipelineId" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.stageId') = 'null'">
         <then>
            <property name="uri.var.stageId" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.visibleTo') = 'null'">
         <then>
            <property name="uri.var.visibleTo" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.visibleTeamId') = 'null'">
         <then>
            <property name="uri.var.visibleTeamId" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.visibleUserIds') = 'null'">
         <then>
            <property name="uri.var.visibleUserIds" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.projectName') = 'null'">
         <then>
            <property name="uri.var.projectName" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.status') = 'null'">
         <then>
            <property name="uri.var.status" value="" />
         </then>
      </filter>
      <filter xpath="get-property('uri.var.ownerUserId') = 'null'">
         <then>
            <property name="uri.var.ownerUserId" value="" />
         </then>
      </filter>
      <!-- If user skips sending the array type params, set it as empty array -->
      <filter source="boolean(get-property('uri.var.tags'))" regex="false">
         <then>
            <property name="uri.var.tags" value="[]" />
         </then>
      </filter>
      <filter source="boolean(get-property('uri.var.links'))" regex="false">
         <then>
            <property name="uri.var.links" value="[]" />
         </then>
      </filter>
      <filter source="boolean(get-property('uri.var.emailLinks'))" regex="false">
         <then>
            <property name="uri.var.emailLinks" value="[]" />
         </then>
      </filter>
      <filter source="boolean(get-property('uri.var.customFields'))" regex="false">
         <then>
            <property name="uri.var.customFields" value="[]" />
         </then>
      </filter>
      <filter source="boolean(get-property('uri.var.ownerUserId'))" regex="true">
         <then>
            <property name="uri.var.ownerUserId"
               expression="fn:concat(',&quot;OWNER_USER_ID&quot;: &quot;', get-property('uri.var.ownerUserId'), '&quot;')" />
         </then>
      </filter>

      <payloadFactory media-type="json">
         <format>
            {
               "PROJECT_NAME": "$1",
               "STATUS": "$2",
               "PROJECT_DETAILS": "$3",
               "OPPORTUNITY_ID": "$4",
               "STARTED_DATE":"$5",
               "COMPLETED_DATE": "$6",
               "IMAGE_URL": "$7",
               "RESPONSIBLE_USER_ID": "$8",
               "CATEGORY_ID": "$9",
               "PIPELINE_ID": "$10",
               "STAGE_ID": "$11",
               "VISIBLE_TO": "$12",
               "VISIBLE_TEAM_ID":"$13",
               "VISIBLE_USER_IDS": "$14",
               "CUSTOMFIELDS": $15,
               "TAGS": $16,
               "LINKS": $17,
               "EMAILLINKS": $18
               $19
            }
         </format>
         <args>
            <arg expression="get-property('uri.var.projectName')" />
            <arg expression="get-property('uri.var.status')" />
            <arg expression="get-property('uri.var.projectDetails')" />
            <arg expression="get-property('uri.var.opportunityId')" />
            <arg expression="get-property('uri.var.startedDate')" />
            <arg expression="get-property('uri.var.completedDate')" />
            <arg expression="get-property('uri.var.imageUrl')" />
            <arg expression="get-property('uri.var.responsibleUserId')" />
            <arg expression="get-property('uri.var.categoryId')" />
            <arg expression="get-property('uri.var.pipelineId')" />
            <arg expression="get-property('uri.var.stageId')" />
            <arg expression="get-property('uri.var.visibleTo')" />
            <arg expression="get-property('uri.var.visibleTeamId')" />
            <arg expression="get-property('uri.var.visibleUserIds')" />
            <arg expression="get-property('uri.var.customFields')" />
            <arg expression="get-property('uri.var.tags')" />
            <arg expression="get-property('uri.var.links')" />
            <arg expression="get-property('uri.var.emailLinks')" />
            <arg expression="get-property('uri.var.ownerUserId')" />
         </args>
      </payloadFactory>
      <call>
         <endpoint>
            <http method="post" uri-template="{uri.var.apiUrl}/Projects" />
         </endpoint>
      </call>
      <!-- Remove response custom header information -->
      <header name="Vary" scope="transport" action="remove" />
      <header name="Expires" scope="transport" action="remove" />
      <header name="Pragma" scope="transport" action="remove" />
      <header name="Cache-Control" scope="transport" action="remove" />
   </sequence>
</template>