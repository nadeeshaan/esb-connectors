<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- API Doc: https://www.billiving.com/api2/Help/Api/POST-v1-clients -->
<template name="createClient" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="id" description="The unique identifier of the client." />
   <parameter name="organizationName" description="The name of the organization." />
   <parameter name="taxId" description="The tax identifier." />
   <parameter name="address1" description="The address line1." />
   <parameter name="address2" description="The address line2." />
   <parameter name="city" description="The city of the client." />
   <parameter name="state" description="The state of the client." />
   <parameter name="zipCode" description="The zip code of the client." />
   <parameter name="website" description="The website of the client." />
   <parameter name="contactName" description="The contact name." />
   <parameter name="email" description="The email of the client." />
   <parameter name="telephone1" description="The telephone number1 of the client." />
   <parameter name="telephone2" description="The telephone number2 of the client." />
   <parameter name="cell" description="The mobile phone number of the client" />
   <parameter name="fax" description="The fax number of the client." />
   <parameter name="internalNotes" description="The internal notes." />
   <parameter name="statusId" description="The status id of the client." />
   <parameter name="paymentDueDays" description="The number of days inwhich the payment is due" />
   <parameter name="bankAccountId" description="The bank account id." />
   <parameter name="discountId" description="The discount id." />
   <parameter name="invoiceReminderPriorInDays" description="The number of days to remind payments" />
   <parameter name="invoiceReminderPastInDays" description="The number of days to remind past payments" />
   <parameter name="uri" description="The uri of the client" />
   <parameter name="countryId" description="The identifier of the country" />
   <sequence>
      <property name="uri.var.id" expression="$func:id" />
      <property name="uri.var.organizationName" expression="$func:organizationName" />
      <property name="uri.var.taxId" expression="$func:taxId" />
      <property name="uri.var.address1" expression="$func:address1" />
      <property name="uri.var.address2" expression="$func:address2" />
      <property name="uri.var.city" expression="$func:city" />
      <property name="uri.var.state" expression="$func:state" />
      <property name="uri.var.zipCode" expression="$func:zipCode" />
      <property name="uri.var.website" expression="$func:website" />
      <property name="uri.var.contactName" expression="$func:contactName" />
      <property name="uri.var.email" expression="$func:email" />
      <property name="uri.var.telephone1" expression="$func:telephone1" />
      <property name="uri.var.telephone2" expression="$func:telephone2" />
      <property name="uri.var.cell" expression="$func:cell" />
      <property name="uri.var.fax" expression="$func:fax" />
      <property name="uri.var.internalNotes" expression="$func:internalNotes" />
      <property name="uri.var.statusId" expression="$func:statusId" />
      <property name="uri.var.paymentDueDays" expression="$func:paymentDueDays" />
      <property name="uri.var.bankAccountId" expression="$func:bankAccountId" />
      <property name="uri.var.discountId" expression="$func:discountId" />
      <property name="uri.var.invoiceReminderPriorInDays" expression="$func:invoiceReminderPriorInDays" />
      <property name="uri.var.invoiceReminderPastInDays" expression="$func:invoiceReminderPastInDays" />
      <property name="uri.var.uri" expression="$func:uri" />
      <property name="uri.var.countryId" expression="$func:countryId" />
      <payloadFactory media-type="json">
         <format> 
            { 
               "Email": "$1" 
            }
         </format>
         <args>
            <arg expression="get-property('uri.var.email')" />
         </args>
      </payloadFactory>
      <script language="js">
         <![CDATA[
            //request body optional parameters
            var payload = mc.getPayloadJSON();
            var id = mc.getProperty('uri.var.id');
            var organizationName = mc.getProperty('uri.var.organizationName');
            var taxId = mc.getProperty('uri.var.taxId');
            var address1 = mc.getProperty('uri.var.address1');
            var address2 = mc.getProperty('uri.var.address2');
            var city = mc.getProperty('uri.var.city');
            var state = mc.getProperty('uri.var.state');
            var zipCode = mc.getProperty('uri.var.zipCode');
            var website = mc.getProperty('uri.var.website');
            var contactName = mc.getProperty('uri.var.contactName');
            var telephone1 = mc.getProperty('uri.var.telephone1');
            var telephone2 = mc.getProperty('uri.var.telephone2');
            var cell = mc.getProperty('uri.var.cell');
            var fax = mc.getProperty('uri.var.fax');
            var internalNotes = mc.getProperty('uri.var.internalNotes');
            var statusId = mc.getProperty('uri.var.statusId');
            var paymentDueDays = mc.getProperty('uri.var.paymentDueDays');
            var bankAccountId = mc.getProperty('uri.var.bankAccountId');
            var discountId = mc.getProperty('uri.var.discountId');
            var invoiceReminderPriorInDays = mc.getProperty('uri.var.invoiceReminderPriorInDays');
            var invoiceReminderPastInDays = mc.getProperty('uri.var.invoiceReminderPastInDays');
            var uri = mc.getProperty('uri.var.uri');
            var countryId = mc.getProperty('uri.var.countryId');
            
            if (id != null && id != "") {
               payload.Id = id;
            }
            if (organizationName != null && organizationName != "") {
               payload.OrganizationName = organizationName;
            }
            if (taxId != null && taxId != "") {
               payload.TaxId = taxId;
            }
            if (address1 != null && address1 != "") {
               payload.Address1 = address1;
            }
            if (address2 != null && address2 != "") {
               payload.Address2 = address2;
            }
            if (city != null && city != "") {
               payload.City = city;
            }
            if (state != null && state != "") {
               payload.State = state;
            }
            if (zipCode != null && zipCode != "") {
               payload.ZipCode = zipCode;
            }
            if (website != null && website != "") {
               payload.Website = website;
            }
            if (contactName != null && contactName != "") {
               payload.ContactName = contactName;
            }
            if (telephone1 != null && telephone1 != "") {
               payload.Telephone1 = telephone1;
            }
            if (telephone2 != null && telephone2 != "") {
               payload.Telephone2 = telephone2;
            }
            if (cell != null && cell != "") {
               payload.Cell = cell;
            }
            if (fax != null && fax != "") {
               payload.Fax = fax;
            }
            if (internalNotes != null && internalNotes != "") {
               payload.InternalNotes = internalNotes;
            }
            if (statusId != null && statusId != "") {
               payload.StatusId = statusId;
            }
            if (paymentDueDays != null && paymentDueDays != "") {
               payload.Due = paymentDueDays;
            }
            if (bankAccountId != null && bankAccountId != "") {
               payload.BankAccountId = bankAccountId;
            }
            if (discountId != null && discountId != "") {
               payload.DiscountId = discountId;
            }
            if (invoiceReminderPriorInDays != null && invoiceReminderPriorInDays != "") {
               payload.DaysPriorDueDate = invoiceReminderPriorInDays;
            }
            if (invoiceReminderPastInDays != null && invoiceReminderPastInDays != "") {
               payload.DaysPastDueDate = invoiceReminderPastInDays;
            }
            if (uri != null && uri != "") {
               payload.Uri = uri;
            }
            if (countryId != null && countryId != "") {
               payload.CountryId = countryId;
            }
            mc.setPayloadJSON(payload);
         ]]>
      </script>
      <property name="DISABLE_CHUNKING" value="true" scope="axis2" />
      <call>
         <endpoint>
            <http method="post" uri-template="{uri.var.apiUrl}/clients" />
         </endpoint>
      </call>
      <!-- Remove response custom header information -->
      <header name="X-Powered-By" scope="transport" action="remove" />
      <header name="X-AspNet-Version" scope="transport" action="remove" />
      <header name="WWW-Authenticate" scope="transport" action="remove" />
      <header name="Expires" scope="transport" action="remove" />
      <header name="Pragma" scope="transport" action="remove" />
      <header name="Cache-Control" scope="transport" action="remove" />
   </sequence>
</template>