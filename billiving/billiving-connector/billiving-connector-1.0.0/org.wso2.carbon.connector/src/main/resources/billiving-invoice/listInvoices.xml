<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- API Doc: https://www.billiving.com/api2/Help/Api/GET-v1-invoices_OrganizationName_VendorName_Id_RefNo_DateFrom_DateTo_Status_PayStatus_CompanyId_FreeText_Skip_Top_OrderBy_Count_FileType_From_To -->
<template name="listInvoices" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="organizationName" description="The organization name" />
   <parameter name="vendorName" description="The vendor name" />
   <parameter name="id" description="The identifier of the invoice" />
   <parameter name="refNo" description="The refferencen number" />
   <parameter name="dateFrom" description="It will list all the invoices created after the date provided" />
   <parameter name="dateTo" description="It will list all the invoices created until the date provided" />
   <parameter name="status" description="The status of the invoice" />
   <parameter name="payStatus" description="The pay status" />
   <parameter name="companyId" description="The company identifier" />
   <parameter name="freeText" description="Invoices which has this text will be listed" />
   <parameter name="skip" description="The ids of invoices to skip in response" />
   <parameter name="top" description="The top most invoices will be listed based on thw=e value given" />
   <parameter name="orderBy" description="Invoice will be listed based on the given order" />
   <parameter name="count" description="The number of invoices should return in response" />
   <parameter name="fileType" description="The type of the file" />
   <parameter name="from" description="It will list all the invoices created after the date provided" />
   <parameter name="to" description="It will list all the invoices created until the date provided" />
   <sequence>
      <property name="uri.var.organizationName" expression="$func:organizationName" />
      <property name="uri.var.vendorName" expression="$func:vendorName" />
      <property name="uri.var.id" expression="$func:id" />
      <property name="uri.var.refNo" expression="$func:refNo" />
      <property name="uri.var.dateFrom" expression="$func:dateFrom" />
      <property name="uri.var.dateTo" expression="$func:dateTo" />
      <property name="uri.var.status" expression="$func:status" />
      <property name="uri.var.payStatus" expression="$func:payStatus" />
      <property name="uri.var.companyId" expression="$func:companyId" />
      <property name="uri.var.freeText" expression="$func:freeText" />
      <property name="uri.var.skip" expression="$func:skip" />
      <property name="uri.var.top" expression="$func:top" />
      <property name="uri.var.orderBy" expression="$func:orderBy" />
      <property name="uri.var.count" expression="$func:count" />
      <property name="uri.var.fileType" expression="$func:fileType" />
      <property name="uri.var.freeText" expression="$func:freeText" />
      <property name="uri.var.from" expression="$func:from" />
      <property name="uri.var.to" expression="$func:to" />
      <script language="js">
         <![CDATA[
            var organizationName = mc.getProperty('uri.var.organizationName');
            var vendorName = mc.getProperty('uri.var.vendorName');
            var id = mc.getProperty('uri.var.id');
            var refNo = mc.getProperty('uri.var.refNo');
            var dateFrom = mc.getProperty('uri.var.dateFrom');
            var dateTo = mc.getProperty('uri.var.dateTo');
            var status = mc.getProperty('uri.var.status');
            var payStatus = mc.getProperty('uri.var.payStatus');
            var companyId = mc.getProperty('uri.var.companyId');
            var freeText = mc.getProperty('uri.var.freeText');
            var skip = mc.getProperty('uri.var.skip');
            var top = mc.getProperty('uri.var.top');
            var orderBy = mc.getProperty('uri.var.orderBy');
            var count = mc.getProperty('uri.var.count');
            var fileType = mc.getProperty('uri.var.fileType');
            var from = mc.getProperty('uri.var.from');
            var to = mc.getProperty('uri.var.to');
            var urlQuery = "";
            if (organizationName != null && organizationName != "") {
               urlQuery += "OrganizationName=" + organizationName + '&';
            }
            if (vendorName != null && vendorName != "") {
               urlQuery += "VendorName=" + vendorName + '&';
            }
            if (id != null && id != "") {
               urlQuery += "Id=" + id + '&';
            }
            if (refNo != null && refNo != "") {
               urlQuery += "RefNo=" + refNo + '&';
            }
            if (dateFrom != null && dateFrom != "") {
               urlQuery += "DateFrom=" + dateFrom + '&';
            }
            if (dateTo != null && dateTo != "") {
               urlQuery += "DateTo=" + dateTo + '&';
            }
            if (status != null && status != "") {
               urlQuery += "Status=" + status + '&';
            }
            if (payStatus != null && payStatus != "") {
               urlQuery += "PayStatus=" + payStatus + '&';
            }
            if (companyId != null && companyId != "") {
               urlQuery += "CompanyId=" + companyId + '&';
            }
            if (freeText != null && freeText != "") {
               urlQuery += "FreeText=" + freeText + '&';
            }
            if (skip != null && skip != "") {
               urlQuery += "Skip=" + skip + '&';
            }
            if (top != null && top != "") {
               urlQuery += "Top=" + top + '&';
            }
            if (orderBy != null && orderBy != "") {
               urlQuery += "OrderBy=" + orderBy + '&';
            }
            if (count != null && count != "") {
               urlQuery += "Count=" + count + '&';
            }
            if (fileType != null && fileType != "") {
               urlQuery += "FileType=" + fileType + '&';
            }
            if (from != null && from != "") {
               urlQuery += "From=" + from + '&';
            }
            if (to != null && to != "") {
               urlQuery += "To=" + to + '&';
            }
            if (urlQuery != "") {
               urlQuery = '?' + urlQuery.substring(0, urlQuery.length - 1);
               var encordedURLQuery=encodeURI(urlQuery);
               mc.setProperty('uri.var.urlQuery', encordedURLQuery);
            } 
         ]]>
      </script>
      <call>
         <endpoint>
            <http method="get" uri-template="{uri.var.apiUrl}/invoices{uri.var.urlQuery}" />
         </endpoint>
      </call>
      <!-- Remove response custom header information -->
      <header name="X-Powered-By" scope="transport" action="remove" />
      <header name="X-AspNet-Version" scope="transport" action="remove" />
      <header name="WWW-Authenticate" scope="transport" action="remove" />
      <header name="Expires" scope="transport" action="remove" />
      <header name="Pragma" scope="transport" action="remove" />
      <header name="Cache-Control" scope="transport" action="remove" />
   </sequence>
</template>