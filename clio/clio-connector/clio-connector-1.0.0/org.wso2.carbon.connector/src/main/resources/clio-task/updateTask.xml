<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="updateTask" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="taskId" description="ID of the task to be updated." />
   <parameter name="cascadingOffsetType"
      description="Type of offset used in cascading date calculate, can be one of [CalendarDays, BusinessDays, CalendarWeeks, CalendarMonths, CalendarYears]." />
   <parameter name="cascadingOffset" description="Number of days difference between this task and the cascading source's due date." />
   <parameter name="cascadingSource" description="A task whose due date will be used to calculate the current task's due date." />
   <parameter name="activities" description="Collection of activities associated with the task. These will be of type TimeEntry." />
   <parameter name="reminders" description="Collection of reminders for a task." />
   <parameter name="isStatuteOfLimitations"
      description="In Clio, a statute of limitations being satisified is represented by the task object. If the statute of limitiations has been satisified the 'complete' field will be true. It is important to note there can only be one statute of limitations for each matter." />
   <parameter name="isPrivate" description="Indicates whether the task is private or not." />
   <parameter name="complete" description="Whether the task is complete or not." />
   <parameter name="completedAt" description="Date the task was completed." />
   <parameter name="dueAt" description="Date the task is due." />
   <parameter name="matter" description="Matter this task relates to." />
   <parameter name="assignee"
      description="User this task is assigned to. When setting, the assignee defaults to current_user or the previous assignee on create and update, respectively. Passing nil as the assignee will remove the assignee." />
   <parameter name="description" description="Description of the task." />
   <parameter name="name" description="Name of the task." />
   <parameter name="priority"
      description="Priority of the task, one of ('High', 'Normal' or 'Low'). If not supplied, defaults to 'Normal'." />
   <parameter name="optionalFields"
      description="Update (or create) associated objects. Currently supported: “activities”. Activities must have type TimeEntry." />
   <sequence>
      <property name="uri.var.taskId" expression="$func:taskId" />
      <property name="uri.var.cascadingOffsetType" expression="$func:cascadingOffsetType" />
      <property name="uri.var.cascadingOffset" expression="$func:cascadingOffset" />
      <property name="uri.var.cascadingSource" expression="$func:cascadingSource" />
      <property name="uri.var.activities" expression="$func:activities" />
      <property name="uri.var.reminders" expression="$func:reminders" />
      <property name="uri.var.isStatuteOfLimitations" expression="$func:isStatuteOfLimitations" />
      <property name="uri.var.isPrivate" expression="$func:isPrivate" />
      <property name="uri.var.complete" expression="$func:complete" />
      <property name="uri.var.completedAt" expression="$func:completedAt" />
      <property name="uri.var.dueAt" expression="$func:dueAt" />
      <property name="uri.var.matter" expression="$func:matter" />
      <property name="uri.var.assignee" expression="$func:assignee" />
      <property name="uri.var.description" expression="$func:description" />
      <property name="uri.var.name" expression="$func:name" />
      <property name="uri.var.priority" expression="$func:priority" />
      <property name="uri.var.optionalFields" expression="$func:optionalFields" />

      <property name="uri.var.urlQuery" value="" />

      <script language="js">
         <![CDATA[
            var jsonPayload = new Object();
            
            var activities = mc.getProperty('uri.var.activities');
            var assignee = mc.getProperty('uri.var.assignee');
            var cascadingOffset = mc.getProperty('uri.var.cascadingOffset');
            var cascadingOffsetType = mc.getProperty('uri.var.cascadingOffsetType');
            var cascadingSource = mc.getProperty('uri.var.cascadingSource');
            var complete = mc.getProperty('uri.var.complete');
            var completedAt = mc.getProperty('uri.var.completedAt');
            var description = mc.getProperty('uri.var.description');
            var dueAt = mc.getProperty('uri.var.dueAt');
            var isPrivate = mc.getProperty('uri.var.isPrivate');
            var isStatuteOfLimitations = mc.getProperty('uri.var.isStatuteOfLimitations');
            var matter = mc.getProperty('uri.var.matter');
            var name = mc.getProperty('uri.var.name');
            var priority = mc.getProperty('uri.var.priority');
            var reminders = mc.getProperty('uri.var.reminders');
            
            var task = new Object();
            if (activities != null && activities != ""){
               task["activities"] = eval("(" + activities + ")");
            }
            
            if (assignee != null && assignee != ""){
               task["assignee"] = eval("(" + assignee + ")");
            }
            
            if (cascadingOffset != null && cascadingOffset != ""){
               task["cascading_offset"] = cascadingOffset;
            }
            
            if (cascadingOffsetType != null && cascadingOffsetType != ""){
               task["cascading_offset_type"] = cascadingOffsetType;
            }
            
            if (cascadingSource != null && cascadingSource != ""){
               task["cascading_source"] = eval("(" + cascadingSource + ")");
            }
            
            if (complete != null && complete != ""){
               task["complete"] = complete;
            }
            
            if (completedAt != null && completedAt != ""){
               task["completed_at"] = completedAt;
            }            
            
            if (description != null && description != ""){
               task["description"] = description;
            }
            
            if (dueAt != null && dueAt != ""){
               task["due_at"] = dueAt;
            }
            
            if (isPrivate != null && isPrivate != ""){
               task["is_private"] = isPrivate;
            }
            
            if (isStatuteOfLimitations != null && isStatuteOfLimitations != ""){
               task["is_statute_of_limitations"] = isStatuteOfLimitations;
            }
            
            if (matter != null && matter != ""){
               task["matter"] = eval("(" + matter + ")");
            }
            
            if (name != null && name != ""){
               task["name"] = name;
            }
            
            if (priority != null && priority != ""){
               task["priority"] = priority;
            }
            
            if (reminders != null && reminders != ""){
               task["reminders"] = eval("(" + reminders + ")");
            }
            
            jsonPayload["task"] = task;
            
            mc.setPayloadJSON(jsonPayload);
         ]]>
      </script>

      <filter source="boolean(get-property('uri.var.optionalFields'))" regex="true">
         <then>
            <property name="uri.var.urlQuery" expression="fn:concat('?optional_fields=', get-property('uri.var.optionalFields'))" />
         </then>
      </filter>

      <call>
         <endpoint>
            <http method="put" uri-template="{uri.var.apiUrl}/tasks/{uri.var.taskId}{uri.var.urlQuery}" />
         </endpoint>
      </call>

      <!-- Remove custom Headers from the API Response -->
      <header name="Vary" action="remove" scope="transport" />
      <header name="X-Frame-Options" action="remove" scope="transport" />
      <header name="X-UA-Compatible" action="remove" scope="transport" />
      <header name="Cache-Control" action="remove" scope="transport" />
      <header name="X-Request-Id" action="remove" scope="transport" />
      <header name="Strict-Transport-Security" action="remove" scope="transport" />
      <header name="ETag" action="remove" scope="transport" />
      <header name="Status" action="remove" scope="transport" />

   </sequence>
</template>
