<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- Method Documentation URL: http://dev.agilezen.com/concepts/authentication.html -->
<template name="init" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="apiUrl" description="Base endpoint URL of AgileZen API." />
   <parameter name="apiKey" description="API Key to access data of AgileZen account." />
   <parameter name="format" description="Format of the Response expected from AgileZen API." />
   <parameter name="enrichments" description="Addtional data about an entity which the user expects to be returned with the response." />
   <sequence>
      <property name="uri.var.apiUrl" expression="$func:apiUrl" />
      <property name="uri.var.apiKey" expression="$func:apiKey" />
      <property name="uri.var.format" expression="$func:format" />
      <property name="uri.var.enrichments" expression="$func:enrichments" />
      <property name="uri.var.apiVersion" value="/api/v1" />
      <filter source="boolean(get-property('uri.var.apiUrl'))" regex="true">
         <then>
            <property name="uri.var.apiUrl" expression="fn:concat(get-property('uri.var.apiUrl'), get-property('uri.var.apiVersion'))" />
         </then>
         <else>
            <property name="uri.var.apiUrl" value="https://agilezen.com/api/v1" />
         </else>
      </filter>
      <filter source="boolean(get-property('uri.var.apiKey'))" regex="true">
         <then>
            <header name="X-Zen-ApiKey" expression="get-property('uri.var.apiKey')" scope="transport" />
         </then>
      </filter>
      <!-- If the user wants the response in XML, it will be negotiated using the Content-Type and Accept header. Default
         is JSON. -->
      <filter source="fn:lower-case(get-property('uri.var.format'))" regex="xml">
         <then>
            <header name="Content-Type" value="application/xml" scope="transport" />
            <header name="Accept" value="application/xml" scope="transport" />
         </then>
         <else>
            <header name="Content-Type" value="application/json" scope="transport" />
            <header name="Accept" value="application/json" scope="transport" />
         </else>
      </filter>
   </sequence>
</template>