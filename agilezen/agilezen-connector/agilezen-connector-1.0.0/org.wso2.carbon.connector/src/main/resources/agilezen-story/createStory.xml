<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- Method Documentation URL: http://dev.agilezen.com/resources/stories.html#create_a_new_story -->
<template name="createStory" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="details" description="The details of the story in Markdown format." />
   <parameter name="size" description="The story's size." />
   <parameter name="priority" description="The story's priority." />
   <parameter name="color" description="Potential colors: grey, blue, red, green, orange, yellow, purple, and teal." />
   <parameter name="phaseId" description="The id or object representing the phase in which to create the story." />
   <parameter name="ownerId" description="The id of the user who will be assigned the story." />
   <parameter name="ownerUserName" description="The username of the user who will be assigned the story." />
   <parameter name="text" description="The text of the story, displayed on the card." />
   <parameter name="tags" description="An array of tag ids or names to apply to the story." />
   <parameter name="tasks" description="An array of task objects to add to the story." />
   <parameter name="projectId" description="ID of the project to which the story belongs." />
   <sequence>
      <property name="uri.var.details" expression="$func:details" />
      <property name="uri.var.size" expression="$func:size" />
      <property name="uri.var.priority" expression="$func:priority" />
      <property name="uri.var.color" expression="$func:color" />
      <property name="uri.var.phaseId" expression="$func:phaseId" />
      <property name="uri.var.ownerId" expression="$func:ownerId" />
      <property name="uri.var.ownerUserName" expression="$func:ownerUserName" />
      <property name="uri.var.text" expression="$func:text" />
      <property name="uri.var.tags" expression="$func:tags" />
      <property name="uri.var.tasks" expression="$func:tasks" />
      <property name="uri.var.projectId" expression="$func:projectId" />
      <property name="uri.var.host" expression="get-property('transport','Host')" />
      <payloadFactory media-type="json">
         <format> {"text": "$1"}
         </format>
         <args>
            <arg expression="get-property('uri.var.text')" />
         </args>
      </payloadFactory>
      <script language="js">
         <![CDATA[
            var jsonPayload = mc.getPayloadJSON();
            var color = mc.getProperty('uri.var.color');
            var details = mc.getProperty('uri.var.details');
            var enrichments = mc.getProperty('uri.var.enrichments');
            var ownerId = mc.getProperty('uri.var.ownerId');
            var ownerUserName = mc.getProperty('uri.var.ownerUserName');
            var phaseId = mc.getProperty('uri.var.phaseId');
            var priority = mc.getProperty('uri.var.priority');
            var size = mc.getProperty('uri.var.size');
            var tags = mc.getProperty('uri.var.tags');
            var tasks = mc.getProperty('uri.var.tasks');
            if (enrichments != null && enrichments != "") {
               mc.setProperty('uri.var.urlQuery', '?with=' + enrichments);
            }
            if (color != null && color != ""){
               jsonPayload.color = color;
            }            
            if (details != null && details != ""){
               jsonPayload.details = details;
            }            
            var owner = new Object();
            if (ownerId != null && ownerId != ""){
               owner.id = ownerId;
            }            
            if (ownerUserName != null && ownerUserName != ""){
               owner.userName = ownerUserName;
            }
            if(owner.hasOwnProperty("id") || owner.hasOwnProperty("userName")){
               jsonPayload.owner = owner;
            }            
            if (phaseId != null && phaseId != ""){
               var phase = new Object();
               phase.id = phaseId;            
               jsonPayload.phase = phase;
            }            
            if (priority != null && priority != ""){
               jsonPayload.priority = priority;
            }            
            if (size != null && size != ""){
               jsonPayload.size = size;
            }            
            if (tags != null && tags != ""){
               jsonPayload.tags = eval("(" + tags + ")");
            }            
            if (tasks != null && tasks != ""){
               jsonPayload.tasks = eval("(" + tasks + ")");
            }            
            mc.setPayloadJSON(jsonPayload);
         ]]>
      </script>
      <call>
         <endpoint>
            <http method="post" uri-template="{uri.var.apiUrl}/projects/{uri.var.projectId}/stories{uri.var.urlQuery}" />
         </endpoint>
      </call>
      <!-- Remove custom Headers from the API Response -->
      <header name="Access-Control-Allow-Origin" action="remove" scope="transport" />
      <header name="X-AspNet-Version" action="remove" scope="transport" />
      <header name="X-AspNetMvc-Version" action="remove" scope="transport" />
      <header name="X-Powered-By" action="remove" scope="transport" />
      <!-- Proceed if the API response status of the recent API call is 302 and 'Location ' header is returned with it. -->
      <property name="uri.var.statusCode" expression="$axis2:HTTP_SC" />
      <filter source="get-property('uri.var.statusCode')" regex="302">
         <then>
            <property name="uri.var.location" expression="get-property('transport','Location')" />
            <agilezen.getRedirection>
               <statusCode>{$ctx:uri.var.statusCode}</statusCode>
               <location>{$ctx:uri.var.location}</location>
            </agilezen.getRedirection>
         </then>
      </filter>
   </sequence>
</template>