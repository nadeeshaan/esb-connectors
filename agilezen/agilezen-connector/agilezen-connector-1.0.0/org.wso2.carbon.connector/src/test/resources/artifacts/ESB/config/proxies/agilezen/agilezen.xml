<?xml version="1.0" encoding="UTF-8"?>
<proxy name="agilezen" startOnLoad="true" statistics="disable" trace="disable" transports="https,http"
   xmlns="http://ws.apache.org/ns/synapse">
   <target>
      <inSequence onError="faultHandlerSeq">
         <property name="apiUrl" expression="json-eval($.apiUrl)" />
         <property name="apiKey" expression="json-eval($.apiKey)" />
         <property name="format" expression="json-eval($.format)" />
         <property name="storyId" expression="json-eval($.storyId)" />
         <property name="enrichments" expression="json-eval($.enrichments)" />
         <property name="projectId" expression="json-eval($.projectId)" />
         <property name="taskId" expression="json-eval($.taskId)" />
         <property name="text" expression="json-eval($.text)" />
         <property name="status" expression="json-eval($.status)" />
         <property name="page" expression="json-eval($.page)" />
         <property name="pageSize" expression="json-eval($.pageSize)" />
         <property name="commentId" expression="json-eval($.commentId)" />         
         <property name="filters" expression="json-eval($.filters)" />
         <property name="name" expression="json-eval($.name)" />
         <property name="description" expression="json-eval($.description)" />
         <property name="details" expression="json-eval($.details)" />
         <property name="size" expression="json-eval($.size)" />
         <property name="priority" expression="json-eval($.priority)" />
         <property name="color" expression="json-eval($.color)" />
         <agilezen.init>
            <apiUrl>{$ctx:apiUrl}</apiUrl>
            <apiKey>{$ctx:apiKey}</apiKey>
            <format>{$ctx:format}</format>
            <enrichments>{$ctx:enrichments}</enrichments>
         </agilezen.init>
         <switch source="get-property('transport', 'Action')">
            <case regex="urn:listProjects">
               <agilezen.listProjects>
                  <filters>{$ctx:filters}</filters>
                  <page>{$ctx:page}</page>
                  <pageSize>{$ctx:pageSize}</pageSize>
               </agilezen.listProjects>
            </case>
            <case regex="urn:getProject">
               <agilezen.getProject>
                  <projectId>{$ctx:projectId}</projectId>
               </agilezen.getProject>
            </case>
            <case regex="urn:updateProject">
               <agilezen.updateProject>
                  <name>{$ctx:name}</name>
                  <description>{$ctx:description}</description>
                  <details>{$ctx:details}</details>
                  <projectId>{$ctx:projectId}</projectId>
               </agilezen.updateProject>
            </case>
            <case regex="urn:createStory">
               <agilezen.createStory>
                  <details>{$ctx:details}</details>
                  <size>{$ctx:size}</size>
                  <priority>{$ctx:priority}</priority>
                  <color>{$ctx:color}</color>
                  <text>{$ctx:text}</text>
                  <projectId>{$ctx:projectId}</projectId>
               </agilezen.createStory>
            </case>
            <case regex="urn:getStory">
               <agilezen.getStory>
                  <storyId>{$ctx:storyId}</storyId>
                  <projectId>{$ctx:projectId}</projectId>
               </agilezen.getStory>
            </case>
            <case regex="urn:listStories">
               <agilezen.listStories>
                  <projectId>{$ctx:projectId}</projectId>
                  <filters>{$ctx:filters}</filters>
                  <page>{$ctx:page}</page>
                  <pageSize>{$ctx:pageSize}</pageSize>
               </agilezen.listStories>
            </case>
            <case regex="urn:updateStory">
               <agilezen.updateStory>
                  <details>{$ctx:details}</details>
                  <size>{$ctx:size}</size>
                  <priority>{$ctx:priority}</priority>
                  <color>{$ctx:color}</color>
                  <text>{$ctx:text}</text>
                  <projectId>{$ctx:projectId}</projectId>
                  <storyId>{$ctx:storyId}</storyId>
               </agilezen.updateStory>
            </case>
            <case regex="urn:createTask">
               <agilezen.createTask>
                  <storyId>{$ctx:storyId}</storyId>
                  <projectId>{$ctx:projectId}</projectId>
                  <text>{$ctx:text}</text>
                  <status>{$ctx:status}</status>
               </agilezen.createTask>
            </case>
            <case regex="urn:updateTask">
               <agilezen.updateTask>
                  <taskId>{$ctx:taskId}</taskId>
                  <storyId>{$ctx:storyId}</storyId>
                  <projectId>{$ctx:projectId}</projectId>
                  <text>{$ctx:text}</text>
                  <status>{$ctx:status}</status>
               </agilezen.updateTask>
            </case>
            <case regex="urn:getTask">
               <agilezen.getTask>
                  <taskId>{$ctx:taskId}</taskId>
                  <storyId>{$ctx:storyId}</storyId>
                  <projectId>{$ctx:projectId}</projectId>
               </agilezen.getTask>
            </case>
            <case regex="urn:listTasks">
               <agilezen.listTasks>
                  <storyId>{$ctx:storyId}</storyId>
                  <projectId>{$ctx:projectId}</projectId>
                  <page>{$ctx:page}</page>
                  <pageSize>{$ctx:pageSize}</pageSize>
               </agilezen.listTasks>
            </case>
            <case regex="urn:createComment">
               <agilezen.createComment>
                  <text>{$ctx:text}</text>
                  <storyId>{$ctx:storyId}</storyId>
                  <projectId>{$ctx:projectId}</projectId>
               </agilezen.createComment>
            </case>
            <case regex="urn:updateComment">
               <agilezen.updateComment>
                  <commentId>{$ctx:commentId}</commentId>
                  <storyId>{$ctx:storyId}</storyId>
                  <projectId>{$ctx:projectId}</projectId>
                  <text>{$ctx:text}</text>
               </agilezen.updateComment>
            </case>
            <case regex="urn:listComments">
               <agilezen.listComments>
                  <storyId>{$ctx:storyId}</storyId>
                  <projectId>{$ctx:projectId}</projectId>
                  <page>{$ctx:page}</page>
                  <pageSize>{$ctx:pageSize}</pageSize>
               </agilezen.listComments>
            </case>
            <case regex="urn:getComment">
               <agilezen.getComment>
                  <commentId>{$ctx:commentId}</commentId>
                  <storyId>{$ctx:storyId}</storyId>
                  <projectId>{$ctx:projectId}</projectId>
               </agilezen.getComment>
            </case>
         </switch>
         <respond />
      </inSequence>
      <outSequence>
         <log />
         <send />
      </outSequence>
   </target>
   <description />
</proxy>