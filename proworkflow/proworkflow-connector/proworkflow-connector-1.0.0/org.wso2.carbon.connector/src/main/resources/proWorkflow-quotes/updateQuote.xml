<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- API Document URL https://api.proworkflow.net/?calls -->
<template name="updateQuote" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="quoteId" description="The identifier of the Quote to be updated." />
   <parameter name="apiFields"
      description="An array of JSON objects containing the api field identifiers and respective values to be updated." />
   <parameter name="isClientView" description="The isClientView boolean value defines whether a client can view the Quote or not." />
   <parameter name="description" description="The Quote description." />
   <parameter name="discountDescription" description="The discount description of the Quote." />
   <parameter name="discountValue" description="The value of the Quote's discount, can be a specific value or a percentage(12%)." />
   <parameter name="number" description="The Quote number to be updated." />
   <parameter name="projectId" description="The identifier of the project to attach the Quote." />
   <parameter name="quotedDate"
      description="The quoted Date, Can be either the specific date(yyyy-mm-dd) or a relative date(+/-Xd/w/m/y)." />
   <parameter name="status" description="The status of the Quote, can be either approved, declined or pending." />
   <parameter name="taxable" description="The taxable boolean value specifies the taxable status of the Quote." />
   <parameter name="taxRate" description="The taxRate specifies the percentage tax rate(E.g. 12.5)." />
   <parameter name="title" description="The title of the Quote." />
   <parameter name="type" description="The Quote type, can be either estimate or quote." />
   <parameter name="validToDate"
      description="The valid to date value of the Quote, Can be either the specific date(yyyy-mm-dd) or a relative date(+/-Xd/w/m/y)." />
   <sequence>
      <property name="uri.var.quoteId" expression="$func:quoteId" />
      <property name="uri.var.apiFields" expression="$func:apiFields" />
      <property name="uri.var.isClientView" expression="$func:isClientView" />
      <property name="uri.var.description" expression="$func:description" />
      <property name="uri.var.discountDescription" expression="$func:discountDescription" />
      <property name="uri.var.discountValue" expression="$func:discountValue" />
      <property name="uri.var.number" expression="$func:number" />
      <property name="uri.var.projectId" expression="$func:projectId" />
      <property name="uri.var.quotedDate" expression="$func:quotedDate" />
      <property name="uri.var.status" expression="$func:status" />
      <property name="uri.var.taxable" expression="$func:taxable" />
      <property name="uri.var.taxRate" expression="$func:taxRate" />
      <property name="uri.var.title" expression="$func:title" />
      <property name="uri.var.type" expression="$func:type" />
      <property name="uri.var.validToDate" expression="$func:validToDate" />
      <script language="js">
         <![CDATA[ 
            // Generate payload with optional parameters
            var quoteId = mc.getProperty('uri.var.quoteId');
            var apiFields = mc.getProperty('uri.var.apiFields');
            var isClientView = mc.getProperty('uri.var.isClientView');
            var description = mc.getProperty('uri.var.description');
            var discountDescription = mc.getProperty('uri.var.discountDescription');
            var discountValue = mc.getProperty('uri.var.discountValue');
            var number = mc.getProperty('uri.var.number');
            var projectId = mc.getProperty('uri.var.projectId');
            var quotedDate = mc.getProperty('uri.var.quotedDate');
            var status = mc.getProperty('uri.var.status');
            var taxable = mc.getProperty('uri.var.taxable');
            var taxRate = mc.getProperty('uri.var.taxRate');
            var title = mc.getProperty('uri.var.title');
            var type = mc.getProperty('uri.var.type');
            var validToDate = mc.getProperty('uri.var.validToDate');
            // Since all the parameters are optional, initialize the payload as an empty JSON object
            payload = {};        
            if (apiFields != null && apiFields != "") {
               payload.apifields = eval('(' + apiFields + ')');
            }          
            if (isClientView != null && isClientView != "") {
               if (isClientView == " ") {
                  payload.clientview = '';
               }else{
                  payload.clientview = isClientView;
               }
            }
            if (description != null && description != "") {
               if (description == " ") {
                  payload.description = '';
               }else{
                  payload.description = description;
               }
            }           
            if (discountDescription != null && discountDescription != "") {
               if (discountDescription == " ") {
                  payload.discountdescription = '';
               }else{
                  payload.discountdescription = discountDescription;
               }
            }           
            if (discountValue != null && discountValue != "") {
               if (discountValue == " ") {
                  payload.discountvalue = '';
               }else{
                  payload.discountvalue = discountValue;
               }
            }           
            if (number != null && number != "") {
               if (number == " ") {
                  payload.number = '';
               }else{
                  payload.number = number;
               }
            }           
            if (projectId != null && projectId != "") {
               if (projectId == " ") {
                  payload.projectid = '';
               }else{
                  payload.projectid = projectId;
               }
            }            
            if (quotedDate != null && quotedDate != "") {
               if (quotedDate == " ") {
                  payload.quoteddate = '';
               }else{
                  payload.quoteddate = quotedDate;
               }
            }  
            if (status != null && status != "") {
               if (status == " ") {
                  payload.status = '';
               }else{
                  payload.status = status;
               }
            }       
            if (taxable != null && taxable != "") {
               if (taxable == " ") {
                  payload.taxable = '';
               }else{
                  payload.taxable = taxable;
               }
            }         
            if (taxRate != null && taxRate != "") {
               if (taxRate == " ") {
                  payload.taxrate = '';
               }else{
                  payload.taxrate = taxRate;
               }
            }           
            if (title != null && title != "") {
               if (title == " ") {
                  payload.title = '';
               }else{
                  payload.title = title;
               }
            }
            if (type != null && type != "") {
               if (type == " ") {
                  payload.type = '';
               }else{
                  payload.type = type;
               }
            }
            if (validToDate != null && validToDate != "") {
               if (validToDate == " ") {
                  payload.validtodate = '';
               }else{
                  payload.validtodate = validToDate;
               }
            }
            mc.setPayloadJSON(payload);                      
         ]]>
      </script>
      <call>
         <endpoint>
            <http method="put" uri-template="{uri.var.apiUrl}/quotes/{uri.var.quoteId}" />
         </endpoint>
      </call>
      <!-- Remove response custom header information -->
      <header name="Access-Control-Allow-Origin" scope="transport" action="remove" />
      <header name="X-RateLimit-Limit" scope="transport" action="remove" />
      <header name="X-RateLimit-Remaining" scope="transport" action="remove" />
      <header name="X-RateLimit-Reset" scope="transport" action="remove" />
      <header name="Access-Control-Max-Age" scope="transport" action="remove" />
      <header name="Access-Control-Allow-Methods" scope="transport" action="remove" />
      <header name="Access-Control-Allow-Credentials" scope="transport" action="remove" />
      <header name="Allow" scope="transport" action="remove" />
      <header name="X-Powered-By" scope="transport" action="remove" />
      <header name="X-TimeTaken-Resource" scope="transport" action="remove" />
      <header name="X-TimeTaken-Total" scope="transport" action="remove" />
      <header name="Access-Control-Allow-Headers" scope="transport" action="remove" />
   </sequence>
</template>