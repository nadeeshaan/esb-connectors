<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse" name="campaignmonitor" transports="https,http" statistics="disable"
	trace="disable" startOnLoad="true">
	<target>
		<inSequence>
			<property name="apiUrl" expression="json-eval($.apiUrl)" />
			<property name="accessToken" expression="json-eval($.accessToken)" />
			<property name="campaignId" expression="json-eval($.campaignId)" />
			<property name="date" expression="json-eval($.date)" />
			<property name="page" expression="json-eval($.page)" />
			<property name="pageSize" expression="json-eval($.pageSize)" />
			<property name="orderField" expression="json-eval($.orderField)" />
			<property name="orderDirection" expression="json-eval($.orderDirection)" />
			<property name="clientId" expression="json-eval($.clientId)" />
			<property name="name" expression="json-eval($.name)" />
			<property name="subject" expression="json-eval($.subject)" />
			<property name="fromName" expression="json-eval($.fromName)" />
			<property name="fromEmail" expression="json-eval($.fromEmail)" />
			<property name="replyToEmail" expression="json-eval($.replyToEmail)" />
			<property name="htmlUrl" expression="json-eval($.htmlUrl)" />
			<property name="listIds" expression="json-eval($.listIds)" />
			<property name="segmentIds" expression="json-eval($.segmentIds)" />
			<property name="confirmationEmailsList" expression="json-eval($.confirmationEmailsList)" />
			<property name="sendDate" expression="json-eval($.sendDate)" />
			<property name="listId" expression="json-eval($.listId)"/>
			<property name="subscribers" expression="json-eval($.subscribers)"/>
			<property name="resubscribe" expression="json-eval($.resubscribe)"/>
			<property name="restartSubscriptionBasedAutoresponders" expression="json-eval($.restartSubscriptionBasedAutoresponders)"/>
			<property name="queueSubscriptionBasedAutoResponders" expression="json-eval($.queueSubscriptionBasedAutoResponders)"/>
			<property name="templateId" expression="json-eval($.templateId)"/>
	        <property name="replyTo" expression="json-eval($.replyTo)"/>
	        <property name="templateContent" expression="json-eval($.templateContent)"/>
			
			<campaignmonitor.init>
				<apiUrl>{$ctx:apiUrl}</apiUrl>
				<accessToken>{$ctx:accessToken}</accessToken>
			</campaignmonitor.init>

			<switch source="get-property('transport', 'Action')">
				<case regex="urn:listClients">
					<campaignmonitor.listClients />
				</case>
				<case regex="urn:listEmailCampaignClickers">
					<campaignmonitor.listEmailCampaignClickers>
						<orderDirection>{$ctx:orderDirection}</orderDirection>
						<campaignId>{$ctx:campaignId}</campaignId>
						<page>{$ctx:page}</page>
						<orderField>{$ctx:orderField}</orderField>
						<pageSize>{$ctx:pageSize}</pageSize>
						<date>{$ctx:date}</date>
					</campaignmonitor.listEmailCampaignClickers>
				</case>
				<case regex="urn:listEmailCampaignOpeners">
					<campaignmonitor.listEmailCampaignOpeners>
						<orderDirection>{$ctx:orderDirection}</orderDirection>
						<campaignId>{$ctx:campaignId}</campaignId>
						<page>{$ctx:page}</page>
						<orderField>{$ctx:orderField}</orderField>
						<pageSize>{$ctx:pageSize}</pageSize>
						<date>{$ctx:date}</date>
					</campaignmonitor.listEmailCampaignOpeners>
				</case>
				<case regex="urn:listCampaigns">
					<campaignmonitor.listCampaigns>
						<clientId>{$ctx:clientId}</clientId>
					</campaignmonitor.listCampaigns>
				</case>
				<case regex="urn:listSubscriberLists">
					<campaignmonitor.listSubscriberLists>
						<clientId>{$ctx:clientId}</clientId>
					</campaignmonitor.listSubscriberLists>
				</case>
				<case regex="urn:createDraftCampaign">
					<campaignmonitor.createDraftCampaign>
						<htmlUrl>{$ctx:htmlUrl}</htmlUrl>
						<segmentIds>{$ctx:segmentIds}</segmentIds>
						<subject>{$ctx:subject}</subject>
						<name>{$ctx:name}</name>
						<fromEmail>{$ctx:fromEmail}</fromEmail>
						<listIds>{$ctx:listIds}</listIds>
						<fromName>{$ctx:fromName}</fromName>
						<replyToEmail>{$ctx:replyToEmail}</replyToEmail>
						<clientId>{$ctx:clientId}</clientId>
					</campaignmonitor.createDraftCampaign>
				</case>
				<case regex="urn:sendCampaign">
					<campaignmonitor.sendCampaign>
						<sendDate>{$ctx:sendDate}</sendDate>
						<campaignId>{$ctx:campaignId}</campaignId>
						<confirmationEmailsList>{$ctx:confirmationEmailsList}</confirmationEmailsList>
					</campaignmonitor.sendCampaign>
				</case>
				<case regex="urn:addSubscribersToList">
					<campaignmonitor.addSubscribersToList>
		            	<listId>{$ctx:listId}</listId>
		            	<subscribers>{$ctx:subscribers}</subscribers>
		            	<resubscribe>{$ctx:resubscribe}</resubscribe>
		            	<queueSubscriptionBasedAutoResponders>{$ctx:queueSubscriptionBasedAutoResponders}</queueSubscriptionBasedAutoResponders>
		            	<restartSubscriptionBasedAutoresponders>{$ctx:restartSubscriptionBasedAutoresponders}</restartSubscriptionBasedAutoresponders>
	         		</campaignmonitor.addSubscribersToList>
				</case>
				<case regex="urn:createCampaignFromTemplate">
					 <campaignmonitor.createCampaignFromTemplate>
				         <templateId>{$ctx:templateId}</templateId>
				         <segmentIds>{$ctx:segmentIds}</segmentIds>
				         <replyTo>{$ctx:replyTo}</replyTo>
				         <subject>{$ctx:subject}</subject>
				         <name>{$ctx:name}</name>
				         <fromEmail>{$ctx:fromEmail}</fromEmail>
				         <templateContent>{$ctx:templateContent}</templateContent>
				         <listIds>{$ctx:listIds}</listIds>
				         <fromName>{$ctx:fromName}</fromName>
				         <clientId>{$ctx:clientId}</clientId>
			         </campaignmonitor.createCampaignFromTemplate>
				</case>
			</switch>
			<respond></respond>
		</inSequence>
		<outSequence>
			<log></log>
			<send></send>
		</outSequence>
	</target>
</proxy>