<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- API Doc: https://apidocs.chargebee.com/docs/api/subscriptions#create_subscription_for_customer -->
<template name="createSubscriptionForCustomer" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="customerId" description="The unique identifier of the customer." />
   <parameter name="subscriptionId" description="The unique identifier of the subscription." />
   <parameter name="planId" description="The unique identifier of a plan to subscribe to." />
   <parameter name="planQuantity" description="The quantity of the plan to be subscribed." />
   <parameter name="startDate" description="The subscription start date in UTC timestamp." />
   <parameter name="trialEndDate" description="The end date of a trial subscription in UTC timestamp." />
   <parameter name="billingCycles" description="The number of cycles this subscription should be charged." />
   <parameter name="couponId" description="The unique identifier of a coupon." />
   <parameter name="purchaseOrderNumber" description="The purchase order number." />
   <parameter name="invoiceNotes" description="The notes to be added to the invoice." />
   <parameter name="shippingAddressFirstName" description="The first name of the shipping address." />
   <parameter name="shippingAddressLastName" description="The last name of the shipping address." />
   <parameter name="shippingAddressEmail" description="The email related to the shipping address." />
   <parameter name="shippingAddressCompanyName" description="The company name for the shipping address." />
   <parameter name="shippingAddressPhoneNumber" description="The phone number related to the shipping address." />
   <parameter name="shippingAddressLine1" description="The line1 of the shipping address." />
   <parameter name="shippingAddressLine2" description="The line2 of the shipping address." />
   <parameter name="shippingAddressLine3" description="The line3 of the shipping address." />
   <parameter name="shippingAddressCity" description="The city of the shipping address." />
   <parameter name="shippingAddressStateCode" description="The state code of the shipping address." />
   <parameter name="shippingAddressState" description="The state of the shipping address." />
   <parameter name="shippingAddressZip" description="The zip or postal code of the shipping address." />
   <parameter name="shippingAddressCountry" description="The country of the shipping address." />
   <parameter name="addonDetails" description="The addon details including addon IDs and the quantities." />
   <sequence>
      <property name="uri.var.customerId" expression="$func:customerId" />
      <property name="uri.var.subscriptionId" expression="$func:subscriptionId" />
      <property name="uri.var.planId" expression="$func:planId" />
      <property name="uri.var.planQuantity" expression="$func:planQuantity" />
      <property name="uri.var.startDate" expression="$func:startDate" />
      <property name="uri.var.trialEndDate" expression="$func:trialEndDate" />
      <property name="uri.var.billingCycles" expression="$func:billingCycles" />
      <property name="uri.var.couponId" expression="$func:couponId" />
      <property name="uri.var.purchaseOrderNumber" expression="$func:purchaseOrderNumber" />
      <property name="uri.var.invoiceNotes" expression="$func:invoiceNotes" />
      <property name="uri.var.shippingAddressFirstName" expression="$func:shippingAddressFirstName" />
      <property name="uri.var.shippingAddressLastName" expression="$func:shippingAddressLastName" />
      <property name="uri.var.shippingAddressEmail" expression="$func:shippingAddressEmail" />
      <property name="uri.var.shippingAddressCompanyName" expression="$func:shippingAddressCompanyName" />
      <property name="uri.var.shippingAddressPhoneNumber" expression="$func:shippingAddressPhoneNumber" />
      <property name="uri.var.shippingAddressLine1" expression="$func:shippingAddressLine1" />
      <property name="uri.var.shippingAddressLine2" expression="$func:shippingAddressLine2" />
      <property name="uri.var.shippingAddressLine3" expression="$func:shippingAddressLine3" />
      <property name="uri.var.shippingAddressCity" expression="$func:shippingAddressCity" />
      <property name="uri.var.shippingAddressStateCode" expression="$func:shippingAddressStateCode" />
      <property name="uri.var.shippingAddressState" expression="$func:shippingAddressState" />
      <property name="uri.var.shippingAddressZip" expression="$func:shippingAddressZip" />
      <property name="uri.var.shippingAddressCountry" expression="$func:shippingAddressCountry" />
      <property name="uri.var.addonDetails" expression="$func:addonDetails" />
      <script language="js">
         <![CDATA[
            var customerId = mc.getProperty('uri.var.customerId');
            var planId = mc.getProperty('uri.var.planId');
            var subscriptionId = mc.getProperty('uri.var.subscriptionId');
            var planQuantity = mc.getProperty('uri.var.planQuantity');
            var startDate = mc.getProperty('uri.var.startDate');
            var trialEndDate = mc.getProperty('uri.var.trialEndDate');
            var billingCycles = mc.getProperty('uri.var.billingCycles');
            var couponId = mc.getProperty('uri.var.couponId');
            var purchaseOrderNumber = mc.getProperty('uri.var.purchaseOrderNumber');
            var invoiceNotes = mc.getProperty('uri.var.invoiceNotes');
            var shippingAddressFirstName = mc.getProperty('uri.var.shippingAddressFirstName');
            var shippingAddressLastName = mc.getProperty('uri.var.shippingAddressLastName');
            var shippingAddressEmail = mc.getProperty('uri.var.shippingAddressEmail');
            var shippingAddressCompanyName = mc.getProperty('uri.var.shippingAddressCompanyName');
            var shippingAddressPhoneNumber = mc.getProperty('uri.var.shippingAddressPhoneNumber');
            var shippingAddressLine1 = mc.getProperty('uri.var.shippingAddressLine1');
            var shippingAddressLine2 = mc.getProperty('uri.var.shippingAddressLine2');
            var shippingAddressLine3 = mc.getProperty('uri.var.shippingAddressLine3');
            var shippingAddressCity = mc.getProperty('uri.var.shippingAddressCity');
            var shippingAddressStateCode = mc.getProperty('uri.var.shippingAddressStateCode');
            var shippingAddressState = mc.getProperty('uri.var.shippingAddressState');
            var shippingAddressZip = mc.getProperty('uri.var.shippingAddressZip');
            var shippingAddressCountry = mc.getProperty('uri.var.shippingAddressCountry');
            var addonDetails = mc.getProperty('uri.var.addonDetails');
            // URI Encode the customerId parameter
            customerId = encodeURIComponent(customerId);
            mc.setProperty('uri.var.customerId', customerId);
            // Add the addon details parameter containing both addon Ids an the addon quantities
            // Since the paramters contain multiple occurrences directly add to the payload
            if (addonDetails != null && addonDetails != "") {
               payload = eval("(" + addonDetails + ")");
            } else {
               payload = new Object();
            }
            // Add the mandatory parameter to the payload
            if (planId != null && planId != "") {
               payload.plan_id = planId;
            } else {
               payload.plan_id = "";
            }
            // Add optional parameters to the payload
            if (subscriptionId != null && subscriptionId != "") {
               payload.id = subscriptionId;
            }
            if (planQuantity != null && planQuantity != "") {
               payload.plan_quantity = planQuantity;
            }
            if (startDate != null && startDate != "") {
               payload. start_date = startDate;
            }
            if (trialEndDate != null && trialEndDate != "") {
               payload.trial_end = trialEndDate;
            }
            if (billingCycles != null && billingCycles != "") {
               payload.billing_cycles = billingCycles;
            }
            if (couponId != null && couponId != "") {
               payload.coupon = couponId;
            }
            if (purchaseOrderNumber != null && purchaseOrderNumber != "") {
               payload.po_number = purchaseOrderNumber;
            }
            if (invoiceNotes != null && invoiceNotes != "") {
               payload.invoice_notes = invoiceNotes;
            }
            if (shippingAddressFirstName != null && shippingAddressFirstName != "") {
               payload["shipping_address[first_name]"] = shippingAddressFirstName;
            }
            if (shippingAddressLastName != null && shippingAddressLastName != "") {
               payload["shipping_address[last_name]"] = shippingAddressLastName;
            }
            if (shippingAddressEmail != null && shippingAddressEmail != "") {
               payload["shipping_address[email]"] = shippingAddressEmail;
            }
            if (shippingAddressCompanyName != null && shippingAddressCompanyName != "") {
               payload["shipping_address[company]"] = shippingAddressCompanyName;
            }
            if (shippingAddressPhoneNumber != null && shippingAddressPhoneNumber != "") {
               payload["shipping_address[phone]"] = shippingAddressPhoneNumber;
            }
            if (shippingAddressLine1 != null && shippingAddressLine1 != "") {
               payload["shipping_address[line1]"] = shippingAddressLine1;
            }
            if (shippingAddressLine2 != null && shippingAddressLine2 != "") {
               payload["shipping_address[line2]"] = shippingAddressLine2;
            }
            if (shippingAddressLine3 != null && shippingAddressLine3 != "") {
               payload["shipping_address[line3]"] = shippingAddressLine3;
            }
            if (shippingAddressCity != null && shippingAddressCity != "") {
               payload["shipping_address[city]"] = shippingAddressCity;
            }
            if (shippingAddressStateCode != null && shippingAddressStateCode != "") {
               payload["shipping_address[state_code]"] = shippingAddressStateCode;
            }
            if (shippingAddressState != null && shippingAddressState != "") {
               payload["shipping_address[state]"] = shippingAddressState;
            }
            if (shippingAddressZip != null && shippingAddressZip != "") {
               payload["shipping_address[zip]"] = shippingAddressZip;
            }
            if (shippingAddressCountry != null && shippingAddressCountry != "") {
               payload["shipping_address[country]"] = shippingAddressCountry;
            } 
            mc.setPayloadJSON(payload);
         ]]>
      </script>
      <property name="messageType" value="application/x-www-form-urlencoded" scope="axis2" />
      <call>
         <endpoint>
            <http method="post" uri-template="{uri.var.apiUrl}/customers/{uri.var.customerId}/subscriptions" />
         </endpoint>
      </call>
      <!-- Remove response custom header information -->
      <header name="WWW-Authenticate" scope="transport" action="remove" />
      <header name="Pragma" scope="transport" action="remove" />
      <header name="Vary" scope="transport" action="remove" />
      <header name="Expires" scope="transport" action="remove" />
      <header name="Cache-Control" scope="transport" action="remove" />
   </sequence>
</template>