<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2005-2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<!-- API Doc: https://apidocs.chargebee.com/docs/api/plans#create_a_plan -->
<template name="createPlan" xmlns="http://ws.apache.org/ns/synapse">
   <parameter name="planId" description="unique indetifier for the system to identify the plan." />
   <parameter name="planName" description="The display name used in admin console for identifying the plan." />
   <parameter name="invoiceName" description="The display name used in invoice. If it is not configured then name is used in invoice." />
   <parameter name="description"
      description="The description about the plan to show in the customer portal when users change their subscription." />
   <parameter name="trialPeriod" description="The free time window for your customer to try your product." />
   <parameter name="trialPeriodUnit" description="Time unit for the trial period, Possible values are day and month." />
   <parameter name="period" description="The period defines the billing frequency." />
   <parameter name="periodUnit"
      description="The periodUnit defines the billing frequency in association with billing period, Possible values are week, month and year." />
   <parameter name="setupCost" description="The setupCost specifies the one-time setup fee charged as part of the first invoice." />
   <parameter name="price" description="The price of the plan." />
   <parameter name="billingCycles" description="The number of billing cycles the subscription is active." />
   <parameter name="chargeModel"
      description="The chargeModel defines how the subscription recurring charge for this plan should be calculated, possible values are flat_fee and per_unit." />
   <parameter name="freeQuantity" description="The freeQuantity specifies the free quantity, the subscriptions of this plan will have." />
   <parameter name="downgradePenalty"
      description="Penalty charge is calculated by % entered with the actual value of the plan for the duration used." />
   <parameter name="redirectUrl" description="The redirectUrl specifies the url to redirect on successful checkout." />
   <parameter name="enabledInHostedPages"
      description="The enabledInHostedPages boolean value specifes whether to allow checkout through plan specific hosted page URL for this plan and changes in the customer portal." />
   <parameter name="invoiceNotes" description="The invoiceNotes specifies the notes for this resource." />
   <sequence>
      <property name="uri.var.planId" expression="$func:planId" />
      <property name="uri.var.planName" expression="$func:planName" />
      <property name="uri.var.invoiceName" expression="$func:invoiceName" />
      <property name="uri.var.description" expression="$func:description" />
      <property name="uri.var.trialPeriod" expression="$func:trialPeriod" />
      <property name="uri.var.trialPeriodUnit" expression="$func:trialPeriodUnit" />
      <property name="uri.var.period" expression="$func:period" />
      <property name="uri.var.periodUnit" expression="$func:periodUnit" />
      <property name="uri.var.setupCost" expression="$func:setupCost" />
      <property name="uri.var.price" expression="$func:price" />
      <property name="uri.var.billingCycles" expression="$func:billingCycles" />
      <property name="uri.var.chargeModel" expression="$func:chargeModel" />
      <property name="uri.var.freeQuantity" expression="$func:freeQuantity" />
      <property name="uri.var.downgradePenalty" expression="$func:downgradePenalty" />
      <property name="uri.var.redirectUrl" expression="$func:redirectUrl" />
      <property name="uri.var.enabledInHostedPages" expression="$func:enabledInHostedPages" />
      <property name="uri.var.invoiceNotes" expression="$func:invoiceNotes" />
      <!-- Generate the request payload with mandatory parameters -->
      <payloadFactory media-type="json">
         <format>
            {
               "id":"$1",
               "name":"$2"
            }
         </format>
         <args>
            <arg expression="get-property('uri.var.planId')" />
            <arg expression="get-property('uri.var.planName')" />
         </args>
      </payloadFactory>
      <script language="js">
         <![CDATA[
            // Generate request payload with optional parameters
            var invoiceName = mc.getProperty('uri.var.invoiceName');
            var description = mc.getProperty('uri.var.description');
            var trialPeriod = mc.getProperty('uri.var.trialPeriod');
            var trialPeriodUnit = mc.getProperty('uri.var.trialPeriodUnit');
            var period = mc.getProperty('uri.var.period');
            var periodUnit = mc.getProperty('uri.var.periodUnit');
            var setupCost = mc.getProperty('uri.var.setupCost');
            var price = mc.getProperty('uri.var.price');
            var billingCycles = mc.getProperty('uri.var.billingCycles');
            var chargeModel = mc.getProperty('uri.var.chargeModel');
            var freeQuantity = mc.getProperty('uri.var.freeQuantity');
            var downgradePenalty = mc.getProperty('uri.var.downgradePenalty');
            var redirectUrl = mc.getProperty('uri.var.redirectUrl');
            var enabledInHostedPages = mc.getProperty('uri.var.enabledInHostedPages');
            var invoiceNotes = mc.getProperty('uri.var.invoiceNotes');
            var payload = mc.getPayloadJSON();
            if (invoiceName != null && invoiceName != "") {
               payload.invoice_name = invoiceName;
            }
            if (description != null && description != "") {
               payload.description = description;
            }
            if (trialPeriod != null && trialPeriod != "") {
               payload.trial_period = trialPeriod;
            }
            if (trialPeriodUnit != null && trialPeriodUnit != "") {
               payload.trial_period_unit = trialPeriodUnit;
            }
            if (period != null && period != "") {
               payload.period = period;
            }
            if (periodUnit != null && periodUnit != "") {
               payload.period_unit = periodUnit;
            }
            if (setupCost != null && setupCost != "") {
               payload.setup_cost = setupCost;
            }
            if (price != null && price != "") {
               payload.price = price;
            }
            if (billingCycles != null && billingCycles != "") {
               payload.billing_cycles = billingCycles;
            }
            if (chargeModel != null && chargeModel != "") {
               payload.charge_model = chargeModel;
            }
            if (freeQuantity != null && freeQuantity != "") {
               payload.free_quantity = freeQuantity;
            }
            if (downgradePenalty != null && downgradePenalty != "") {
               payload.downgrade_penalty = downgradePenalty;
            }
            if (redirectUrl != null && redirectUrl != "") {
               payload.redirect_url = redirectUrl;
            }
            if (enabledInHostedPages != null && enabledInHostedPages != "") {
               payload.enabled_in_hosted_pages = enabledInHostedPages;
            }
            if (invoiceNotes != null && invoiceNotes != "") {
               payload.invoice_notes = invoiceNotes;
            }
            mc.setPayloadJSON(payload);
         ]]>
      </script>
      <property name="messageType" value="application/x-www-form-urlencoded" scope="axis2" />
      <call>
         <endpoint>
            <http method="post" uri-template="{uri.var.apiUrl}/plans" />
         </endpoint>
      </call>
      <!-- Remove response custom header information -->
      <header name="WWW-Authenticate" scope="transport" action="remove" />
      <header name="Pragma" scope="transport" action="remove" />
      <header name="Vary" scope="transport" action="remove" />
      <header name="Expires" scope="transport" action="remove" />
      <header name="Cache-Control" scope="transport" action="remove" />
   </sequence>
</template>